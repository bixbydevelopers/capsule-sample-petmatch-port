template-macro-def (DOGBREED) {
  params {
    param (size) {
      type (Size)
      max (One)
      min (Required)
    }
    param (temperament) {
      type (Temperament)
      max (One)
      min (Required)
    }
    param (energy) {
      type (Energy)
      max (One)
      min (Required)
    }
    param (dogBreed) {
      type (DogBreed)
      max (One)
      min (Required)
    }
  }
  content {
    template ("So a #{value(size)} #{value(temperament)} #{value(energy)} energy dog sounds good for you. Consider a #{value(dogBreed.breed)}")
  }
}

template-macro-def (DOGBREEDNOMATCH) {
  params {
    param (size) {
      type (Size)
      max (One)
      min (Required)
    }
    param (temperament) {
      type (Temperament)
      max (One)
      min (Required)
    }
    param (energy) {
      type (Energy)
      max (One)
      min (Required)
    }
  }
  content {
    template ("I'm sorry I couldn't find a match for a #{value(size)} #{value(temperament)} #{value(energy)} energy dog")
  }
}

template-macro-def (FUNNYANIMAL) {
  params {
    param (animal) {
      type (Animal)
      max (One)
      min (Required)
    }
  }
  content {
    choose (Random) {
      template ("I'm sorry, but I'm not qualified to match you with a #{value(animal)}.")
      template ("Ah yes, #{value(animal)}s are splendid creatures, but unfortunately owning one as a pet is outlawed.")
      template ("I'm sorry I can't match you with a #{value(animal)}.")
    }
  }
}